from dotenv import load_dotenv
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
import os

load_dotenv()


#function that creates the engine
def data_engine():
      # Get environment variables
    database = os.environ["DB_NAME"]
    host = os.environ["DB_HOST"]
    user = os.environ["DB_USER"]
    port = os.environ["DB_PORT"]
    pw = os.environ["PGPASSWORD"]
    
    # Construct the database URI
    db_uri = f"postgresql://{user}:{pw}@{host}:{port}/{database}"
    
    # Create the engine
    engine = create_engine(db_uri)
    
    return engine

def create_session(engine):
    Session = sessionmaker(bind=engine)
    return Session


def post_hours(title, hours): ##still not running properly
    engine = data_engine()
    Session = create_session(engine)
    session = Session()
    try:
        session.execute("UPDATE work_instance SET hours=:hours WHERE title=:title",{'hours':hours, 'title':title})
        session.commit()
        return{"message":"Update successful"}, 200
    except Exception as e:
        session.rollback()
        return{"message":str(e)}, 400
    finally:
        session.close()
    

post_hours('Work2', '4')